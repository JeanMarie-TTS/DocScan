---
name: Docker Images
on:
  workflow_dispatch:

jobs:
  docker-update:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      GH_REPO: jeanmarie-tts/docscan
    strategy:
      fail-fast: false
      matrix:
        image:
          - name: postgrest/postgrest
            tag: latest
            tname: postgrest
          - name: swaggerapi/swagger-ui
            tag: latest
            tname: swagger
          - name: clamav/clamav
            tag: latest
            tname: clamav

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch refresh token artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          name: ${{ matrix.image.tname }}
        continue-on-error: true

      - name: Initialize refresh token
        shell: bash
        run: |
          current_date=$(date +%s)
          start_date=$((current_date - 31536000))
          echo The default is $start_date
          value=`cat ${{ matrix.image.tname }}.txt || echo $start_date`
          echo The result is $value
          touch  ${{ matrix.image.tname }}.txt
          echo $value > ${{ matrix.image.tname }}.txt



      - name: Pull Docker Image
        run: docker pull ${{ matrix.image.name }}:${{ matrix.image.tag }}
      - name: Check Image Creation Date
        run: |
          last_image_date=`cat ${{ matrix.image.tname }}.txt`
          image_creation_date=$(date -d "$(docker inspect -f '{{ .Created }}' ${{ matrix.image.name }}:${{ matrix.image.tag }})" +%s)
          echo $last_image_date
          echo $image_creation_date
          if [[ $image_creation_date -lt $last_image_date ]]; then
            echo "We have the latest version already"
            exit 1
          else
            echo "We have an updated version"
            echo $image_creation_date > ${{ matrix.image.tname }}.txt
          fi


      - name: Scan Image
        run: docker run aquasec/trivy:latest  image --timeout 5m --scanners vuln --exit-code 1 --severity CRITICAL,HIGH  ${{ matrix.image.name }}:${{ matrix.image.tag }}
      - name: Tag Image
        run: |
          image_creation_date=$(date -d "$(docker inspect -f '{{ .Created }}' ${{ matrix.image.name }}:${{ matrix.image.tag }})" +%s)
          docker tag ${{ matrix.image.name }}:${{ matrix.image.tag }} ghcr.io/${{ env.GH_REPO }}/${{ matrix.image.name }}:${{ matrix.image.tag }}
          docker tag ${{ matrix.image.name }}:${{ matrix.image.tag }} ghcr.io/${{ env.GH_REPO }}/${{ matrix.image.name }}:$image_creation_date

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Image
        run: docker push --all-tags ghcr.io/${{ env.GH_REPO }}/${{ matrix.image.name }}

      
      - name: Upload refresh token
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.image.tname }}
          path: ${{ matrix.image.tname }}.txt


  docker-fetch:

    runs-on: ubuntu-latest
    needs: docker-update
    env:
      GH_REPO: jeanmarie-tts/docscan

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Pull PostGREST Docker Image from fhcr
        run: docker pull ghcr.io/${{ env.GH_REPO }}/postgrest/postgrest:latest

  job_3:
    name: get-image-versions
    uses: ./.github/workflows/get-versions.yml
    needs: docker-update

